#!/usr/bin/env bash

set -e
set -o pipefail

ASDF_INSTALL_TYPE=${ASDF_INSTALL_TYPE:-version  }
[ -n "$ASDF_INSTALL_VERSION" ] || (>&2 echo 'Missing ASDF_INSTALL_VERSION' && exit 1)
[ -n "$ASDF_INSTALL_PATH" ] || (>&2 echo 'Missing ASDF_INSTALL_PATH' && exit 1)

install_maistra() {
  local install_type=$1
  local version=$2
  local install_path=$3
  local bin_install_path="$install_path/bin"
  local download_url="$(get_download_url $version)"

  mkdir -p ${bin_install_path}

  local bin_path="${bin_install_path}/istiooc"
  local tempdir=""
  [ "linux" = "$(get_arch)" ] && tempdir=$(mktemp -d asdf-maistra.XXXXXXX) || tempdir=$(mktemp -dt asdf-maistra)

  echo "Downloading maistra v${version} from ${download_url}"  
  if [[ "${version}" == 0* ]]; then
    install_executable $download_url $bin_path
  else
    install_archive $download_url $install_path $bin_path $tempdir
  fi
}

install_archive() {
  local download_url=$1
  local install_path=$2
  local bin_path=$3
  local tempdir=$4
  
  curl -sSL "$download_url" -o "${tempdir}/maistra.archive.tgz"
  tar -C "${install_path}/bin" -xzf "${tempdir}/maistra.archive.tgz"  --strip 1 # this works only for latest versions (e.g 1.2 is a flat archive)
  chmod +x $bin_path
  rm -rf "${tempdir}"
}

install_executable() {
  local download_url=$1
  local bin_path=$2
  curl -sSL "$download_url" -o "${bin_path}/istiooc"
  chmod +x "${bin_path}/istiooc"
}

get_arch() {
  local platform=""
  [ "Linux" = "$(uname)" ] && platform="linux" || platform="darwin"
  echo "${platform}"
}

get_download_url() {
  local version="$1"
  local filename=""
  filename="istiooc-$(get_arch)"
  
  echo "https://github.com/Maistra/origin/releases/download/${version}/${filename}"
}

install_maistra $ASDF_INSTALL_TYPE $ASDF_INSTALL_VERSION $ASDF_INSTALL_PATH
